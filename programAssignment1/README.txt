The program is simple enough and doesn't require much help or explanation; however the file passed into the program must be named 'testdata.txt'. 

The most complex function in the submitted file is the cowCheck function; this is unsurprising as this is the function that actually sorts the inputted file. Because of this, I only looked into finding that function's complexity, as any function will have a lower O(n) and won't matter, thusly; I believe that my overall solution runs in O(c*log(c)+r) as this function runs in O(c*log(c)+r). cowCheck runs in at least O(c) (note "for line in lines:") and from this, additional time is added by the nested if statements, bringing it up to O(c*log(c)). Due to no nested for loops, this function never reaches O(n^2). I worry that my function might be O(r*log(c)) instead of O(c*log(c)). The for loop checks each line of input, rather than checking each cow in cowCheck itself, but the for loop in my main function that calls cowCheck runs each new cow into cowCheck, so I believe that it is considered O(c*log(c)). The remaining parts of code in the cowCheck function serve only to append to lists (that will be printed later) and can be seen as the +r. All of this leads me to believe my function runs in O(c*log(c)+r).